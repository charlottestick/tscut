import { app, BrowserWindow, Menu, screen, Tray } from 'electron';
import { TrayItem } from './trayItem';
// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

// Component variable declarations
let stack;
let menu;
let trayItem: TrayItem;
let bezel;
let hotkeyListeners;
let hotkey;
let interactions;
let pasteboard;

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require('electron-squirrel-startup')) {
  app.quit();
}

const createWindow = (): BrowserWindow => {
  // Create the browser window.
  // Frame false removes the toolbars and menus around the rendered web page
  const mainWindow = new BrowserWindow({
    height: 600,
    width: 800,
    frame: false,
    transparent: true,
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
    },
  });

  mainWindow.setSkipTaskbar(true);

  // and load the index.html of the app.
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

  // Menu won't be shown anyway because it's a frameless window,
  // but removing just in case as a default menu is created and might have some random hotkeys we don't want
  Menu.setApplicationMenu(null);
  return mainWindow;
};

const onReady = (): void => {
  // Initialise components like tray item, clipping stack, interaction manager, menu, ketkey listener
  bezel = createWindow();
  trayItem = new TrayItem();
};

app.on('ready', onReady);
